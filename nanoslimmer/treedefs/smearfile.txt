"PandaTree/Objects/interface/Event.h"

{reset(panda::Event& e)}

INCLUDE treedefs/eventinfo.txt

pfmet = e.MET.pt
pfmet_phi = e.MET.phi

trigger/O = e.HLT.Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8 or \
            e.HLT.Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8 or \
            e.HLT.Ele115_CaloIdVT_GsfTrkIdT or \
            e.HLT.Ele27_WPTight_Gsf or \
            e.HLT.Ele28_WPTight_Gsf or \
            e.HLT.Ele32_WPTight_Gsf or \
            e.HLT.Ele35_WPTight_Gsf or \
            e.HLT.Ele38_WPTight_Gsf or \
            e.HLT.Ele40_WPTight_Gsf or \
            e.HLT.Ele32_WPTight_Gsf_L1DoubleEG

<lepid.h>

<lep{1, 2}> {
  lep(<T>& lep)

    /O = false -> true
    is_muon/O = false -> std::is_same<decltype(lep), const panda::Muon&>::value;
    $ -> lep.$ | pt, eta, phi, dxy, dz, <{miniPFRelIso, pfRelIso03}_{all, chg}>
    mass -> []_is_muon ? 0.10566 : 0.000511
    q/B -> lep.charge
    $/O = false -> lepid::$(lep) | W, Z, loose, tight

}

"crombie/KinematicFunctions.h"

dilep {

  #vec/TLorentzVector = TLorentzVector() <- vectorSum(<lep{1, 2}_{pt, eta, phi, mass}>)
  $ <- []_vec.$$() | pt, eta, phi, m

}

"TVector2.h"

num_jet/s
num_bjet/s

<jet{1, 2}> {
  jet(panda::Jet& jet)

    #INCLUDE treedefs/setjet.txt

  pt_regressed <- []_pt * []_bRegCorr

  response <- []_pt_regressed / dilep_pt

  response_X_$ <- []_pt_X_$ / dilep_pt | down, nominal, up |X SMEARINGS

  dphi_ll <- std::abs(TVector2::Phi_mpi_pi(dilep_phi - []_phi))

  response_intrinsic <- []_gen_pt ? []_pt_regressed / []_gen_pt : 0

}

<cmath>

#dilep_plus_jet2/TVector2 = TVector2() <- TVector2(<dilep_pt * std::{cos, sin}(dilep_phi)>) + TVector2(<jet2_pt_regressed * std::{cos, sin}(jet2_phi)>)
#dilep_plus_jet2_X_$/TVector2 = TVector2() <- TVector2(<dilep_pt * std::{cos, sin}(dilep_phi)>) + \
                                              TVector2(<jet2_pt_X_$ * std::{cos, sin}(jet2_phi)>) | down, nominal, up |X SMEARINGS

jet1_adjusted_response <- jet1_pt_regressed/dilep_plus_jet2.Mod()
jet1_half_adjusted_response_X_$ <- jet1_pt_X_$/dilep_plus_jet2.Mod() | down, nominal, up |X SMEARINGS
jet1_adjusted_response_X_$ <- jet1_pt_X_$/dilep_plus_jet2_X_$.Mod() | down, nominal, up |X SMEARINGS

alpha <- jet2_pt_regressed/dilep_pt
alpha_X_$ <- jet2_pt_X_$/dilep_pt | down, nominal, up |X SMEARINGS

untrained_response <- jet1_pt_regressed/dilep_pt

++ lep1_pt > 20 and lep2_pt > 20 and (lep1_q + lep2_q) == 0 and \
   fabs(jet1_eta) < 2.4 and jet1_dphi_ll > 2.8 and \
   dilep_m > 71 and dilep_m < 111 and \
   std::min({alpha, alpha_smeared_nominal, alpha_smeared_up, alpha_smeared_down}) < 0.3 and \
   dilep_pt > 50 and jet1_btagDeepB > 0.3 ++
