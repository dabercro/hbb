1;2501;0c<vector>

"lazytf.h"
"genjet.h"
"pfvecs.h"
"regression.h"
"TVector2.h"

{/F}                           ! Default type
{0}                            ! Default value
{reset(panda::Event& e)}       ! Define the arguments of reset

#pv/TVector3 = e.vertices[0].position()

genWeight = e.weight
$ = e.$ | rho
nPVs = e.npvTrue
nPVs_good = e.npv

met_$ = e.pfMet.$ | pt, phi

event/l = e.eventNumber
run/i = e.runNumber
luminosityBlock/l = e.lumiNumber

isEle <- std::abs(Jet_leptonPdgId) == 11
isMu <- std::abs(Jet_leptonPdgId) == 13
isOther <- not (isEle or isMu)

Jet {
  jet(panda::Jet& jet, gennujet::GenNuVec& withnu, <G> gen)

    puId -> jet.puid
    btagCMVA -> jet.cmva
    btagDeepC -> jet.deepCSVc + jet.deepCSVcc
    btagDeepB -> jet.deepCSVb + jet.deepCSVbb

    (p4 = jet.p4())

    raw -> jet.rawPt/jet.pt()
!    pt -> jet.rawPt
!    $ -> p4.$$() * []_raw | mt, e
!    $ -> p4.$$() | eta, phi
!    $ -> p4.M() * []_raw | mass

    $ -> p4.$$() | pt, eta, phi, mt, e
    $ -> p4.M() | mass

    chHEF -> jet.chf
    neHEF -> jet.nhf
    chEmEF -> jet.cef
    neEmEF -> jet.nef

    (info = regression::GetJetInfo(jet))
    $/S -> info.$ | vtxNtrk
    $ -> info.$ | vtxMass, vtx3dL, vtx3deL, vtxPt

    leadTrackPt -> info.maxpfpt

    rawFactor -> 1 - jet.rawPt/[]_pt
    rawEnergy -> []_e * jet.rawPt/[]_pt

    mc$$ -> withnu.genvec.$$() | pt, eta, phi, m
    mcFlavour -> gen->partonFlavor

    $/I -> info.$ | leptonPdgId
    $ -> info.$ | leptonPt, leptonPtRel, leptonPtRelInv, leptonDeltaR

    ptd -> info.ptD
    withPtd <- []_ptd

    energyRing_dR$_@ -> info.@_rings[$].first | 0..6 |@ neut, ch, em, mu
    energyRing_dR$_@_Jet_rawEnergy -> []_energyRing_dR$_@/[]_rawEnergy | 0..6 |@ neut, ch, em, mu

    numDaughters_pt03/s -> info.num03
    numberOfDaughters/s -> jet.constituents.size()

    ! Should it be abs value?
    met_dPhi <- TVector2::Phi_mpi_pi(met_phi - []_phi)

    pf_@_$ -> info.pfinfo[@].$ |@ 0..5 | ptfrac, deta, dphi, puppiwt, dxy, dz
    pf_@_$/I -> info.pfinfo[@].$ |@ 0..5 | pdgid

    puppi_@_$ -> info.@.$$() | pt, m, e |@ <{charged, neutral}{, _pu}>
    puppi_@_$ -> info.@.filled ? info.@.$$() : []_$ | eta, phi |@ <{charged, neutral}{, _pu}>

DEFINE bkinematics <puppi_{charged, neutral}{, _pu}>

    @_$frac <- []_@_$/[]_$ | pt |@ bkinematics
    @_d$ <- TVector2::Phi_mpi_pi([]_@_$ - []_$) | eta, phi |@ bkinematics

    (pfvecs = pfvecs::get_vecs(jet, pv))

    $/std::vector<Float_t> -> std::move(pfvecs.$) | <pf_{pt, fastjet}_sorted_{pt, eta, phi, m, dxy, dz}>
    $/std::vector<Char_t> -> std::move(pfvecs.$) | <pf_{pt, fastjet}_sorted_q>

!    #tf_@/std::vector<float> = {0, 0} \
!        <- lazytf::eval("data/freeze_@.pb", "data/regression9.txt", \
!           {"dnn/split_logits/Slice", "dnn/split_logits/Slice_1"}, 1, \
!           `perl -ane 'chomp; s/Jet/\[\]/; print; eof || print ", "' data/regression9.txt`) |@ 190711_2

!    tf_@_$ <- []_tf_@[=$=] | deta, dphi |@ 190711_2

}
